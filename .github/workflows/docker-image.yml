name: Build, Push and Release FASTP Docker Image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-push-release:
    runs-on: ubuntu-latest
    
    # 关键权限设置
    permissions:
      contents: write  # 必须设置为 write 才能创建 Release
      packages: write
      id-token: write
      actions: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 确保唯一版本号
      - name: Determine version
        id: version
        run: |
          if [[ ${{ github.event_name }} == 'workflow_dispatch' ]]; then
            VERSION="manual-$(date +"%Y%m%d-%H%M%S")"
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION="sha-${GITHUB_SHA:0:7}-$(date +"%Y%m%d%H%M%S")"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate image tags
        id: tags
        run: |
          IMAGE_NAME="ghcr.io/yangtaotao-7209/code-docker-yangtaotao/fastp-docker"
          echo "tags=$IMAGE_NAME:${{ env.VERSION }},$IMAGE_NAME:latest" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

     

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: "FASTP Docker ${{ env.VERSION }}"
          body: ${{ steps.release-notes.outputs.notes }}
          files: |
            Dockerfile
            entrypoint.sh
          draft: false
          prerelease: ${{ github.event_name != 'push' }}
          generate_release_notes: false
