name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    # 使用 Docker-in-Docker 环境
    runs-on: ubuntu-latest
    container:
      image: docker:20.10.16
      options: --privileged

    steps:
      - name: Install prerequisites
        run: |
          apk add --no-cache \
            git \
            openssh-client \
            bash \
            jq  # 添加 jq 用于处理 JSON

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate tags
        id: tags
        run: |
          # 获取短 SHA
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          
          # 获取当前日期用于标签
          DATE_TAG=$(date +"%Y%m%d")
          echo "DATE_TAG=$DATE_TAG" >> $GITHUB_ENV
          
          # 检查是否有版本标签
          if echo $GITHUB_REF | grep -q 'refs/tags/'; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "tags=slgit.yutg.net/cuhk-haosun/fastp-docker:$VERSION,slgit.yutg.net/cuhk-haosun/fastp-docker:latest" >> $GITHUB_OUTPUT
          else
            echo "tags=slgit.yutg.net/cuhk-haosun/fastp-docker:$SHORT_SHA,slgit.yutg.net/cuhk-haosun/fastp-docker:$DATE_TAG,slgit.yutg.net/cuhk-haosun/fastp-docker:latest" >> $GITHUB_OUTPUT
          fi

      - name: Build Docker image
        run: |
          # 从步骤输出中获取标签列表
          TAGS=$(echo "${{ steps.tags.outputs.tags }}" | tr ',' '\n')
          
          # 构建命令
          BUILD_CMD="docker build"
          
          # 为每个标签添加构建参数
          for TAG in $TAGS; do
            BUILD_CMD+=" -t $TAG"
          done
          
          BUILD_CMD+=" ."
          
          echo "Building with command: $BUILD_CMD"
          eval $BUILD_CMD

      - name: Log in to registry
        env:
          REGISTRY: slgit.yutg.net
          USERNAME: ${{ secrets.REGISTRY_USER }}
          PASSWORD: ${{ secrets.REGISTRY_TOKEN }}
        run: |
          echo "$PASSWORD" | docker login $REGISTRY -u "$USERNAME" --password-stdin

      - name: Push Docker images
        run: |
          # 从步骤输出中获取标签列表
          TAGS=$(echo "${{ steps.tags.outputs.tags }}" | tr ',' '\n')
          
          # 推送所有标签
          for TAG in $TAGS; do
            echo "Pushing $TAG"
            docker push $TAG
          done

      - name: Create release notes
        if: ${{ env.VERSION != '' }}
        run: |
          # 创建版本说明
          NOTES="Fastp Docker Image Release $VERSION\n\n"
          NOTES+="**Image tags:**\n"
          NOTES+="\`slgit.yutg.net/cuhk-haosun/fastp-docker:$VERSION\`\n"
          NOTES+="\`slgit.yutg.net/cuhk-haosun/fastp-docker:latest\`\n\n"
          NOTES+="**Changes:**\n$(git log --pretty=format:'- %s (%h)' ${{ github.event.before }}..${{ github.sha }})"
          
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo -e "$NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        if: ${{ env.VERSION != '' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: ${{ env.RELEASE_NOTES }}
          files: |
            Dockerfile
            entrypoint.sh
