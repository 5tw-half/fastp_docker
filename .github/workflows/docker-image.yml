name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    # 使用标准 runner 避免所有权问题
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate tags
        id: tags
        run: |
          # 使用 GitHub 提供的环境变量获取 SHA
          SHORT_SHA=${GITHUB_SHA:0:7}
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          
          # 获取当前日期用于标签
          DATE_TAG=$(date +"%Y%m%d")
          echo "DATE_TAG=$DATE_TAG" >> $GITHUB_ENV
          
          # 检查是否有版本标签
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "tags=slgit.yutg.net/cuhk-haosun/fastp-docker:$VERSION,slgit.yutg.net/cuhk-haosun/fastp-docker:latest" >> $GITHUB_OUTPUT
          else
            echo "tags=slgit.yutg.net/cuhk-haosun/fastp-docker:$SHORT_SHA,slgit.yutg.net/cuhk-haosun/fastp-docker:$DATE_TAG,slgit.yutg.net/cuhk-haosun/fastp-docker:latest" >> $GITHUB_OUTPUT
          fi
          
          echo "Generated tags: ${{ steps.tags.outputs.tags }}"

      - name: Log in to registry
        env:
          REGISTRY: slgit.yutg.net
          USERNAME: ${{ secrets.REGISTRY_USER }}
          PASSWORD: ${{ secrets.REGISTRY_TOKEN }}
        run: |
          echo "$PASSWORD" | docker login $REGISTRY -u "$USERNAME" --password-stdin

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create release notes (if tagged)
        if: ${{ env.VERSION != '' }}
        run: |
          # 使用 GitHub API 获取变更日志
          CHANGELOG=$(curl -s \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/compare/${{ github.event.before }}...${{ github.sha }}" | \
            jq -r '.commits[] | "- \(.commit.message) (\(.sha[0:7]))"')
          
          NOTES="Fastp Docker Image Release $VERSION\n\n"
          NOTES+="**Image tags:**\n"
          NOTES+="\`slgit.yutg.net/cuhk-haosun/fastp-docker:$VERSION\`\n"
          NOTES+="\`slgit.yutg.net/cuhk-haosun/fastp-docker:latest\`\n\n"
          NOTES+="**Changes:**\n$CHANGELOG"
          
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo -e "$NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        if: ${{ env.VERSION != '' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: ${{ env.RELEASE_NOTES }}
          files: |
            Dockerfile
            entrypoint.sh
