name: Docker Build, Test and Push

on:
  push:
    branches: [ main ]

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: src

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          cd src
          docker build -t fastp-trimmer:test .

      - name: Run functional tests
        run: |
          cd src
          mkdir -p test-output
          
          # 测试双端数据
          docker run --rm \
            -v $(pwd)/test-data/paired-end:/mnt/in \
            -v $(pwd)/test-output/paired:/mnt/out \
            fastp-trimmer:test
          
          # 测试单端数据
          docker run --rm \
            -v $(pwd)/test-data/single-end:/mnt/in \
            -v $(pwd)/test-output/single:/mnt/out \
            fastp-trimmer:test
          
          # 验证输出文件
          ls -lh test-output/paired
          ls -lh test-output/single
          [ -f test-output/paired/sample1_R1.fastq.gz ] || exit 1
          [ -f test-output/paired/sample1_fastp.html ] || exit 1
          [ -f test-output/single/sample2.fastq.gz ] || exit 1

      - name: Push to GHCR
        if: success()
        run: |
          cd src
          docker tag fastp-trimmer:test ghcr.io/${{ github.repository_owner }}/fastp-trimmer:${{ github.sha }}
          docker tag fastp-trimmer:test ghcr.io/${{ github.repository_owner }}/fastp-trimmer:latest
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/${{ github.repository_owner }}/fastp-trimmer:${{ github.sha }}
          docker push ghcr.io/${{ github.repository_owner }}/fastp-trimmer:latest
